d1 2
a2 2
! Checksum: zY7zGyGHe/Vui/+6xaOPIg
! Diff-Path: ../patches/6/6-s-1739364519-3600.patch
d5 2
a6 2
! Version: 2.0.45.96
! TimeUpdated: 2025-02-12T12:43:22+00:00
a1494 11
! https://github.com/AdguardTeam/AdguardFilters/issues/198374
! It looks like that PHPSESSID is checked on the server side
! I guess that it works like that - if specific PHPSESSID was registered and few/several seconds passed (I suppose 10 seconds or so)
! then it redirects to video content, otherwise it displays ads
! So, as a workaround a PHPSESSID is set to 1 for every video
! and it checks if the video content is available, if not, it tries again after 10 seconds,
! if it's available, it redirects to the video content
filstalwelle.de#$##mejsplayer:has(> video > source[src^="/video/content/a/"]) { display: none !important; }
filstalwelle.de#%#//scriptlet('trusted-replace-node-text', 'div', 'WERBUNG', 'WERBUNG', 'Trying to skip ads...')
filstalwelle.de#%#//scriptlet("trusted-replace-node-text", "script", "doPostRoll", "/\?PHPSESSID=.*?'/", "?PHPSESSID=1'")
filstalwelle.de#%#//scriptlet("trusted-create-element", "head", "script", "", "(()=>{if(!location.pathname.includes('/video/video'))return;const e=async t=>{const o=await fetch(t);(await o.text()).match(/src=.content\//)?location.replace(t):setTimeout(e,1e4,t)};window.addEventListener('load',(()=>{const t=document.querySelector('body > :is(.mejs__video, #mejsplayer) ~ script:not([type], [src])'),o=t?.textContent.match(/\$\('#bodyTarget'\)\.load\('(.+?)'.+?\);/)?.[1];if(o){let t=location.href.replace(/videoin\.php\?video=.*/,o);t=t.replace(/PHPSESSID=.*/,'PHPSESSID=1'),e(t)}else{console.debug('Required part not found in the script.');}}))})();")
